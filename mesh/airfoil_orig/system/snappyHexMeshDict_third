/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |				
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8                                   	
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Which of the steps to run
castellatedMesh true;
snap            false;
addLayers       false;

geometry
{


    airfoil.stl
    {
        type triSurfaceMesh;
        name stlSurface;
    }

    shockBox
    {
        type searchableBox;
        min (0.01 -1 0.0);
        max (0.1  1 0.13);
    }

    trailingEdgeBox
    {
        type searchableBox;
        min (0.14 -1 -0.05);
        max (0.6  1 0.06);
    }
    boundaryBox
    {
        type searchableBox;
        min (0.145 -1 -0.005);
        max (0.155  1 0.005);
    }
};

// Settings for the castellatedMesh generation.
castellatedMeshControls
{

    // Refinement parameters
    // ~~~~~~~~~~~~~~~~~~~~~

    maxLocalCells 100000;

    //maxGlobalCells 2000000;
    maxGlobalCells 10000000; //about 10GB memory

    minRefinementCells 0;

    maxLoadUnbalance 0.10;

    nCellsBetweenLevels 1;

    // Explicit feature edge refinement
    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    features
    (
     /*{
	file "leading_edge.eMesh";
	level 5;
     }
     {
	file "trailing_edge.eMesh";
	level 5;
     }*/
     /*{
        file "airfoil.eMesh";
	level 6;
     }*/
    );

    // Surface based refinement
    // ~~~~~~~~~~~~~~~~~~~~~~~~

    refinementSurfaces
    {

        /*stlSurface
        {
            // Surface-wise min and max refinement level
            //level (2 2); 
            //level (2 4); 
          level (4 5); 
        }*/



    }

    // Feature angle:

    resolveFeatureAngle 30;		//recommended

    //- Optional increment (on top of max level) in small gaps
    //It is added where the distance between two surface is less than 2 cells (refined)
    //gapLevelIncrement 2;	//use with 6 6 in TE
    //gapLevelIncrement 4;	//use with 4 4 in TE

    planarAngle 30;

    // Region-wise refinement
    // ~~~~~~~~~~~~~~~~~~~~~~

    refinementRegions
    {

        shockBox
        {
            mode inside;   
            levels ((1e15 5));  //1E15 4
        }

        /*boundaryBox
        {
            mode inside;   
            levels ((1e15 5));  //1E15 4
        }*/
        trailingEdgeBox
        {
            mode inside;   
            levels ((1e15 4));  //1E15 4
        }
	stlSurface
	{
	    mode distance;
	    levels
	    (
	         (0.04 5)
		 (0.06 4)
		 (0.075 3)
	    );
	}

    }

    // Mesh selection
    // ~~~~~~~~~~~~~~

    locationInMesh (2.3 -0.041 2.3);  

    allowFreeStandingZoneFaces true;

}

// Settings for the snapping.
snapControls
{
    // Number of patch smoothing iterations before finding correspondence
    // to surface
    nSmoothPatch 3;	//recommended
    

    tolerance 2.0;	//recommended
    //tolerance 1.0;

    nSolveIter 30;	//recommended
    //nSolveIter 100;	//improved

    nRelaxIter 5;	//recommended
    //nRelaxIter 10;	//improved	10-20-50

    // Feature snapping

        nFeatureSnapIter 10;		//recommended
        //nFeatureSnapIter 100;		//improved	50-100

//For 2D
        implicitFeatureSnap true;

        explicitFeatureSnap false;

        multiRegionFeatureSnap false;
}

// Settings for the layer addition.
addLayersControls
{
    relativeSizes true;
    //relativeSizes false;

    // Layer thickness specification. This can be specified in one of following
    // ways:
    // - expansionRatio and finalLayerThickness (cell nearest internal mesh)
    // - expansionRatio and firstLayerThickness (cell on surface)
    // - overall thickness and firstLayerThickness
    // - overall thickness and finalLayerThickness
    // - overall thickness and expansionRatio
    //
    // Note: the mode thus selected is global, i.e. one cannot override the
    //       mode on a per-patch basis (only the values can be overridden)

        // Expansion factor for layer mesh
        //expansionRatio 1.0;
        expansionRatio 1.2;

        // Wanted thickness of the layer furthest away from the wall.
        // If relativeSizes this is relative to undistorted size of cell
        // outside layer.
        //finalLayerThickness 1;
        //finalLayerThickness 0.5;	//relative sizes true

        // Wanted thickness of the layer next to the wall.
        // If relativeSizes this is relative to undistorted size of cell
        // outside layer.
        firstLayerThickness 0.5;
	//firstLayerThickness 0.002;	//reltive sizes false

        // Wanted overall thickness of layers.
        // If relativeSizes this is relative to undistorted size of cell
        // outside layer.
        //thickness 0.5

    // Minimum overall thickness of total layers. If for any reason layer
    // cannot be above minThickness do not add layer.
    // If relativeSizes this is relative to undistorted size of cell
    // outside layer..
    //minThickness 0.25;
    //minThickness 0.1;
    //minThickness 0.05;
    minThickness 0.00001;

    // Per final patch (so not geometry!) the layer information
    // Note: This behaviour changed after 21x. Any non-mentioned patches
    //       now slide unless:
    //          - nSurfaceLayers is explicitly mentioned to be 0.
    //          - angle to nearest surface < slipFeatureAngle (see below)
    layers
    {

        stlSurface
        {
            nSurfaceLayers 10;		
           
        }

    }

    // If points get not extruded do nGrow layers of connected faces that are
    // also not grown. This helps convergence of the layer addition process
    // close to features.
    // Note: changed(corrected) w.r.t 17x! (didn't do anything in 17x)
    nGrow 0;

    // Advanced settings

    // Static analysis of starting mesh

        // When not to extrude surface. 0 is flat surface, 90 is when two faces
        // are perpendicular

        featureAngle 160;		//default


        // Stop layer growth on highly warped cells
        maxFaceThicknessRatio 0.5;

    // Patch displacement

        // Number of smoothing iterations of surface normals
        nSmoothSurfaceNormals 1;

        // Smooth layer thickness over surface patches
        nSmoothThickness 10;

    // Medial axis analysis

        minMedialAxisAngle 90;
        minMedianAxisAngle 90;

        // Reduce layer growth where ratio thickness to medial
        // distance is large
        maxThicknessToMedialRatio 0.3;

        // Number of smoothing iterations of interior mesh movement direction
        nSmoothNormals 3;

    // Mesh shrinking

        slipFeatureAngle 30;

        nRelaxIter 5;

        nBufferCellsNoExtrude 0;

        nLayerIter 50;

        nRelaxedIter 20;

}

// Generic mesh quality settings. At any undoable phase these determine
// where to undo.
meshQualityControls
{
    // Specify mesh quality constraints in separate dictionary so can
    // be reused (e.g. checkMesh -meshQuality)
    #include "meshQualityDict"

    // Optional : some meshing phases allow usage of relaxed rules.
    // See e.g. addLayersControls::nRelaxedIter.
    relaxed
    {
        // Maximum non-orthogonality allowed. Set to 180 to disable.
        maxNonOrtho 75;
    }

    //minFlatness 0.5;

    // Advanced

        // Number of error distribution iterations
        nSmoothScale 4;
        // amount to scale back displacement at error points
        errorReduction 0.75;
}

// Advanced

//// Debug flags
/*
debugFlags
(
    mesh            // write intermediate meshes
    intersections   // write current mesh intersections as .obj files
    featureSeeds    // write information about explicit feature edge
                    // refinement
    attraction      // write attraction as .obj files
    layerInfo       // write information about layers
);
*/

//
//// Write flags

writeFlags
(
    scalarLevels    // write volScalarField with cellLevel for postprocessing
    layerSets       // write cellSets, faceSets of faces in layer
    layerFields     // write volScalarField for layer coverage
);

// Merge tolerance. Is fraction of overall bounding box of initial mesh.
// Note: the write tolerance needs to be higher than this.
mergeTolerance 1e-6;

// ************************************************************************* //
